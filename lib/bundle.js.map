{"version":3,"sources":["webpack:///webpack/bootstrap b22deefc4e00cc352b94","webpack:///./lib/main.js","webpack:///./lib/game/towerOfHanoi.js","webpack:///./lib/game/display.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA,EAAC;;AAED;AACA;;;;;;;ACTA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA,0DAAyD,cAAc;;AAEvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;;AAEA;AACA,mBAAkB,QAAQ;AAC1B;AACA;AACA;;;AAGA;;;;;;;AC/DA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gCAA+B,gBAAgB;;AAE/C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8CAA6C,gBAAgB;AAC7D,UAAS;AACT,qCAAoC,qBAAqB;AACzD;AACA,QAAO;AACP;AACA;AACA,mBAAkB,mBAAmB;AACrC;AACA;AACA;AACA,iBAAgB,QAAQ;AACxB;AACA;AACA;AACA,iBAAgB,QAAQ;AACxB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kCAAiC,gBAAgB;AACjD;AACA,QAAO;AACP,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b22deefc4e00cc352b94\n **/","const TowerOfHanoi = require('./game/towerOfHanoi.js');\nconst GameDisplay = require('./game/display.js');\n\n$(function(){\n  const game = new GameDisplay();\n  game.initialSetup();\n})\n\nwindow.TowerOfHanoi = TowerOfHanoi;\nwindow.GameDisplay = GameDisplay;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/main.js\n ** module id = 0\n ** module chunks = 0\n **/","function TowerOfHanoi(n){\n  this.numOfDisks = n;\n  this.towers = [[],[],[]];\n  this.numOfMoves = 0;\n}\n\nTowerOfHanoi.factory = function(num){\n  const tower = new TowerOfHanoi(num);\n  tower.setDisks(num);\n  return tower;\n}\n\nTowerOfHanoi.prototype.moveDisk = function (fromId, toId) {\n  const movingDisk = this.towers[fromId].pop();\n  this.towers[toId].push(movingDisk);\n  this.numOfMoves++;\n};\n\nTowerOfHanoi.prototype.solved = function () {\n  if (this.towers[0].length == 0 &&\n      (this.towers[1].length == this.numOfDisks ||\n       this.towers[2].length == this.numOfDisks)){\n    return true;\n  } else {\n    return false;\n  }\n};\n\nTowerOfHanoi.prototype.validMove = function (fromId, toId) {\n  if (fromId > 2 || fromId < 0 || toId > 2 || toId < 0) { return false; }\n\n  const movingDisk = this.towers[fromId].length > 0\n                   ? this.towers[fromId][this.towers[fromId].length-1]\n                   : false;\n  const receivingDisk = this.towers[toId].length > 0\n                      ? this.towers[toId][this.towers[toId].length-1]\n                      : false;\n  if (movingDisk){\n    if (!receivingDisk){\n      return true;\n    } else if (movingDisk < receivingDisk){\n      return true;\n    }\n  }\n  return false;\n};\n\nTowerOfHanoi.prototype.processMove = function (fromId, toId) {\n  if (this.validMove(fromId, toId)){\n    this.moveDisk(fromId, toId);\n    return true;\n  } else {\n    return false;\n  }\n};\n\nTowerOfHanoi.prototype.setDisks = function (num) {\n  for(let i = num; i >= 1; i--){\n    this.towers[0].push(i);\n  }\n};\n\n\nmodule.exports = TowerOfHanoi;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game/towerOfHanoi.js\n ** module id = 1\n ** module chunks = 0\n **/","const TowerOfHanoi = require(\"./towerOfHanoi.js\");\nconst OriginalMessage = \"Please enter your name and the number of disks you want to set.\\nWhen ready, click 'Start' button!\";\n\nfunction GameDisplay(){\n  this.message = OriginalMessage;\n  this.selectedTower = -1;\n}\n\nGameDisplay.prototype.initialSetup = function () {\n  let $form = $(\"#game-form\");\n  $form.on(\"submit\", this.start.bind(this));\n  $(\"#reset-button\").on(\"click\", this.reset.bind(this));\n  $(\"#message\").append(this.message)\n};\n\nGameDisplay.prototype.start = function (event) {\n  event.preventDefault();\n  this.playerName = $(event.currentTarget).find(\"#player-name\").val();\n  this.numOfDisks = $(event.currentTarget).find(\"#disk-number\").val();\n\n  this.game = TowerOfHanoi.factory(parseInt(this.numOfDisks));\n  this.message = `Good luck, ${this.playerName}`;\n\n  this._registerTowerId = this.registerTowerId.bind(this)\n  $(\"#game-board\").on(\"click\", \".tower\", this._registerTowerId);\n\n  this.toggleInput();\n  this.render();\n};\n\nGameDisplay.prototype.reset = function (event) {\n  event.preventDefault();\n  this.game = undefined;\n  this.message = OriginalMessage;\n  $(\"#game-board\").off(\"click\", \".tower\", this._registerTowerId);\n  this.toggleInput();\n  this.render();\n};\n\n\nGameDisplay.prototype.processMove = function (fromId, toId) {\n  return this.game.processMove(fromId, toId);\n};\n\nGameDisplay.prototype.registerTowerId = function (event) {\n  let towerId = parseInt($(event.currentTarget).attr(\"id\"));\n\n  if (this.selectedTower >= 0){\n    if(this.selectedTower != towerId){\n      let result = this.processMove(this.selectedTower, towerId);\n      if (result) {\n        if (this.game.solved()){\n          this.message = `Congratulations, ${this.playerName}. You solved it!`;\n        } else {\n          this.message = `Move #: ${this.game.numOfMoves}`;\n        }\n      } else {\n        this.message = \"Invalid Move!\";\n      }\n      $(`.tower#${this.selectedTower}`).removeClass(\"active\");\n      this.render();\n    }\n    this.selectedTower = -1;\n    $(`.tower#${towerId}`).removeClass(\"active\");\n  }\n  else {\n    this.selectedTower = towerId;\n    $(`.tower#${towerId}`).addClass(\"active\");\n  }\n\n};\n\nGameDisplay.prototype.render = function () {\n  let $towers = $(\".tower\");\n  $towers.empty();\n\n  if (this.game){\n    $towers.each((i,towerEl) => {\n      let idx = parseInt(parseInt(towerEl.id));\n      this.game.towers[idx].forEach(disk => {\n        let newDisk = $(`<span></span>`);\n        newDisk.addClass(`tower${disk.toString()}`);\n        $(towerEl).prepend(newDisk);\n      });\n    });\n  }\n  let $message = $(\"#message\");\n  $message.empty();\n  $message.append(this.message)\n};\n\nGameDisplay.prototype.toggleInput = function () {\n  $(\"form\").toggleClass(\"hidden\");\n  $(\"#reset-button\").toggleClass(\"hidden\");\n};\n\nmodule.exports = GameDisplay;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./lib/game/display.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}